apiVersion: machine.openshift.io/v1beta1
kind: MachineSet
metadata:
  annotations:
    machine.openshift.io/GPU: '<GPU_SIZE>'
    machine.openshift.io/memoryMb: '<MEMORY_SIZE>'
    machine.openshift.io/vCPU: '<CPU_SIZE>'
  labels:
    machine.openshift.io/cluster-api-cluster: <CLUSTER_NAME>-<CLUSTER_ID>
    machine.openshift.io/cluster-api-machine-role: <ROLE>
    machine.openshift.io/cluster-api-machine-type: <ROLE>
    machine.openshift.io/instance-type: <INSTANCE_TYPE>
    machine.openshift.io/region: <REGION>
    machine.openshift.io/zone: <ZONE>
  name: <CLUSTER_NAME>-<CLUSTER_ID>-<ROLE>-<ZONE>
  namespace: openshift-machine-api
spec:
  replicas: 0
  selector:
    matchLabels:
      machine.openshift.io/cluster-api-cluster: <CLUSTER_NAME>-<CLUSTER_ID>
      machine.openshift.io/cluster-api-machineset: <CLUSTER_NAME>-<CLUSTER_ID>-<ROLE>-<ZONE>
  template:
    metadata:
      labels:
        machine.openshift.io/cluster-api-cluster: <CLUSTER_NAME>-<CLUSTER_ID>
        machine.openshift.io/cluster-api-machine-role: <ROLE>
        machine.openshift.io/cluster-api-machine-type: <ROLE>
        machine.openshift.io/cluster-api-machineset: <CLUSTER_NAME>-<CLUSTER_ID>-<ROLE>-<ZONE>
    spec:
      metadata:
        labels:
          node-role.kubernetes.io/<ROLE>: ''
      providerSpec:
        value:
          ami:
            id: ami-<AMI_ID>
          apiVersion: awsproviderconfig.openshift.io/v1beta1
          blockDevices:
            - ebs:
                encrypted: true
                iops: 0
                kmsKey:
                  arn: ''
                volumeSize: <VOLUME_SIZE>
                volumeType: <VOLUME_TYPE>
          credentialsSecret:
            name: aws-cloud-credentials
          deviceIndex: 0
          iamInstanceProfile:
            id: <CLUSTER_NAME>-<CLUSTER_ID>-<ROLE>-profile
          instanceType: <INSTANCE_TYPE>
          kind: AWSMachineProviderConfig
          loadBalancers:
            - name: <CLUSTER_NAME>-<CLUSTER_ID>-int
              type: network
            - name: <CLUSTER_NAME>-<CLUSTER_ID>-ext
              type: network
          metadata:
            creationTimestamp: null
          placement:
            availabilityZone: <ZONE>
            region: <REGION>
          securityGroups:
            - filters:
                - name: 'tag:Name'
                  values:
                    - <CLUSTER_NAME>-<CLUSTER_ID>-<ROLE>-sg
          subnet:
            filters:
              - name: 'tag:Name'
                values:
                  - <CLUSTER_NAME>-<CLUSTER_ID>-private-<ZONE>
          tags:
            - name: kubernetes.io/cluster/<CLUSTER_NAME>-<CLUSTER_ID>
              value: owned
          userDataSecret:
            name: <ROLE>-user-data
